

ex :
name : shell comands  #  user difine 

on : [push]
jobs :
  run-shell-commands:  #  user difine  i can name it 'my-command-dbah' 
    runs-on: ubuntu-latest
    steps:
      - name : echo a 
        run: echo "hello world"
      - name: multline script
        run: |
          node -v
          npm -v


- stata  Workflow Name:

name: shell commands: Specifies the name of the workflow.
Event Trigger:

on: [push]: Indicates that the workflow should be triggered on a push event.
Job:

jobs:: Begins the definition of jobs for the workflow.
run-shell-commands:: The job is named "run-shell-commands."
Operating System:

runs-on: ubuntu-latest: Specifies that the job runs on an Ubuntu environment.
Steps:

steps:: Begins the definition of steps for the job.
Step 1: Echo a String:

- name: echo a: The first step is named "echo a."
run: echo "hello world": Executes the echo command to print "hello world."
Step 2: Multiline Script:

- name: multiline script: The second step is named "multiline script."
run: |: Begins a multiline script block.
Copy code
node -v
npm -v

/* ---------------------- to enable more debug message ---------------------- */
go to settings  -> Secrets and variables  and add ACTIONS_RUNNER_DEBUG  : true  , ACTIONS_STEP_DEBUG:true 


/* ---------------------------- The run: | syntax --------------------------- */
is used to indicate the start of a multiline script block.
Here's an example of how you might use the run: | syntax in a GitHub Actions workflow:

yaml
Copy code
jobs:
  my-job:
    runs-on: ubuntu-latest
    steps:
      - name: Run a multiline script
        run: |
          echo "This is line 1"
          echo "This is line 2"
          echo "This is line 3"

/* ----------------------------------- job ---------------------------------- */
each Operating System need diffrent Job
each job work in parallel

/* ---------------------------------- shell --------------------------------- */
to run anther terminal on os in vm   that means shell not exist on os but it will start vm for the shell
ex:
windows-command:
runs-on: windows-latest
steps:
  - name: runs command
    run: Get-Location 
  - name: bash directory 
    run: pwd
    shell: bash  # windows does not have bash shell  but it will start vm for you

/* ---------------------------------- need ---------------------------------- */
by default  jobs run in parallel if job depends on anther use 
need: [ job name ]

ex:

# name : ahmed  comands

# on : [push]
# jobs :
#   run-dbah-commands:
#     runs-on: ubuntu-latest
#     steps:
#       - name : echo a 
#         run: echo "hello world"
#       - name: multline script
#         run: |
#           node -v
#           npm -v



name : ahmed_workfloe

on: [push]

jobs:
  sh-command:
    runs-on: ubuntu-latest
    steps:
      - name: runs command
        run: echo "hello ahmed  world "
    
  windows-command:
    runs-on: windows-latest
    needs: [ sh-command]  # job  windows-command will runs after sh-command
      - name: runs command
        run: Get-Location 
      - name: bash directory 
        run: pwd
        shell: bash


* actions can have inputs  ( with:)  and we can use other actions that published in GitHub
ex:

name : javaScript-workflow

on: [push]

jobs:
  run-js-job:
    runs-on : ubuntu-latest
    steps:
     - name: import js 
       id: greet # steps can has id 
       uses: actions/hello-world-javascript-action@main   # use other actions 
       with:
        who-to-greet:  dbah
     - name: log greet
       run : echo "${{ steps.greet.output.time}}"
 
 /* --------------------------- actions/checkout@v3 -------------------------- */
 to clone your code to te current directory of the terminal use  actions/checkout@v3 available in GitHub
 ex:

 
name : javaScript-workflow
   
on: [push]

jobs:
  run-js-job:
    runs-on : ubuntu-latest
    steps:
     - name: checkout
       uses: actions/checkout@v3 # without this step the   ls -a will  not list any file 
     - name: list fils 
       run: |
         pwd
         ls -a
      
/* ------------------------------ GitHub Events ----------------------------- */

Push Event:

Triggered when commits are pushed to a branch.
yaml
Copy code
on:
  push:
    branches:
      - main

Pull Request Event:

Triggered when a pull request is opened, synchronized, or closed.
yaml
Copy code
on:
  pull_request:
    branches:
      - main

Schedule Event:

Triggered at scheduled intervals.
yaml
Copy code
on:
  schedule:
    - cron: '0 0 * * *'
Workflow Dispatch Event:

Manually triggered by a user or an external event.
yaml
Copy code
on:
  workflow_dispatch:
Repository Dispatch Event:

Triggered by an external event using the GitHub API.
yaml
Copy code
on:
  repository_dispatch:
    types: [my-event-type]
Tag Event:

Triggered when a new tag is created.
yaml
Copy code
on:
  push:
    tags:
      - '*'
Create Event:

Triggered when a branch or tag is created.
yaml
Copy code
on:
  create:
    branches:
      - main
Delete Event:

Triggered when a branch or tag is deleted.
yaml
Copy code
on:
  delete:
    branches:
      - main
    

/* ------------------------------ activity type ----------------------------- */
some events has Specific actitvity type like pull_request

on:
  pull_request:
    types:
      - opened
      - synchronize
      - closed
    branches:
      - main
if you not specify the type it has default like opend 

/* -------------------------------- schedule -------------------------------- */
use do schedule  action every specific time 
to learn more about cron go to  https://crontab.guru/

ex:
name : javaScript-workflow-schedule
   
on:
  schedule:
  - cron: "0/5 * * * *"  # run every 5 minites  the minimam time to run is every 5 minits